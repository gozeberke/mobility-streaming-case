services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  flink-jobmanager:
    image: flink:1.18.1-scala_2.12
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
        jobmanager.memory.process.size: 1600m
        jobmanager.bind-host: 0.0.0.0
        execution.checkpointing.interval: 10s
        execution.checkpointing.mode: EXACTLY_ONCE
        execution.checkpointing.min-pause: 5s
        execution.checkpointing.timeout: 60s
        state.backend: filesystem
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        s3.endpoint: http://minio:9000
        s3.path-style-access: true
        s3.access-key: minioadmin
        s3.secret-key: minioadmin
        fs.s3a.access.key: minioadmin
        fs.s3a.secret.key: minioadmin
        fs.s3a.endpoint: http://minio:9000
        fs.s3a.path.style.access: true
        fs.s3a.connection.ssl.enabled: false
    volumes:
      - ./flink/lib/flink-connector-kafka-3.0.1-1.18.jar:/opt/flink/lib/flink-connector-kafka-3.0.1-1.18.jar:ro
      - ./flink/lib/kafka-clients-3.5.1.jar:/opt/flink/lib/kafka-clients-3.5.1.jar:ro
      - ./flink/plugins:/opt/flink/plugins:ro
    mem_limit: 2g

  flink-taskmanager:
    image: flink:1.18.1-scala_2.12
    command: taskmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.memory.process.size: 2048m
        taskmanager.numberOfTaskSlots: 4
        execution.checkpointing.interval: 10s
        execution.checkpointing.mode: EXACTLY_ONCE
        state.backend: filesystem
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        s3.endpoint: http://minio:9000
        s3.path-style-access: true
        s3.access-key: minioadmin
        s3.secret-key: minioadmin
        fs.s3a.access.key: minioadmin
        fs.s3a.secret.key: minioadmin
        fs.s3a.endpoint: http://minio:9000
        fs.s3a.path.style.access: true
        fs.s3a.connection.ssl.enabled: false
    volumes:
      - ./flink/lib/flink-connector-kafka-3.0.1-1.18.jar:/opt/flink/lib/flink-connector-kafka-3.0.1-1.18.jar:ro
      - ./flink/lib/kafka-clients-3.5.1.jar:/opt/flink/lib/kafka-clients-3.5.1.jar:ro
      - ./flink/plugins:/opt/flink/plugins:ro
    mem_limit: 3g
    depends_on:
      - flink-jobmanager

  flink-taskmanager-2:
    image: flink:1.18.1-scala_2.12
    command: taskmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.memory.process.size: 2048m
        taskmanager.numberOfTaskSlots: 4
        execution.checkpointing.interval: 10s
        execution.checkpointing.mode: EXACTLY_ONCE
        state.backend: filesystem
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        s3.endpoint: http://minio:9000
        s3.path-style-access: true
        s3.access-key: minioadmin
        s3.secret-key: minioadmin
        fs.s3a.access.key: minioadmin
        fs.s3a.secret.key: minioadmin
        fs.s3a.endpoint: http://minio:9000
        fs.s3a.path.style.access: true
        fs.s3a.connection.ssl.enabled: false
    volumes:
      - ./flink/lib/flink-connector-kafka-3.0.1-1.18.jar:/opt/flink/lib/flink-connector-kafka-3.0.1-1.18.jar:ro
      - ./flink/lib/kafka-clients-3.5.1.jar:/opt/flink/lib/kafka-clients-3.5.1.jar:ro
      - ./flink/plugins:/opt/flink/plugins:ro
    mem_limit: 3g
    depends_on:
      - flink-jobmanager

  minio:
    image: minio/minio
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
      sleep 10 &&
      mc alias set local http://minio:9000 minioadmin minioadmin &&
      mc mb local/metrics || true &&
      echo 'MinIO bucket created'
      "
    depends_on:
      - minio

  sql-client:
    image: flink:1.18.1-scala_2.12
    command: bash -c "sleep 30 && sql-client.sh embedded -Drest.address=flink-jobmanager -Drest.port=8081 -Dexecution.checkpointing.interval=10s -Dexecution.checkpointing.mode=EXACTLY_ONCE -Ds3.endpoint=http://minio:9000 -Ds3.path-style-access=true -Ds3.access-key=minioadmin -Ds3.secret-key=minioadmin -Dfs.s3a.access.key=minioadmin -Dfs.s3a.secret.key=minioadmin -Dfs.s3a.endpoint=http://minio:9000 -Dfs.s3a.path.style.access=true -Dfs.s3a.connection.ssl.enabled=false -f /opt/flink/sql/trip_aggregations.sql"
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    volumes:
      - ./flink/sql:/opt/flink/sql:ro
      - ./flink/lib/flink-connector-kafka-3.0.1-1.18.jar:/opt/flink/lib/flink-connector-kafka-3.0.1-1.18.jar:ro
      - ./flink/lib/kafka-clients-3.5.1.jar:/opt/flink/lib/kafka-clients-3.5.1.jar:ro
      - ./flink/plugins:/opt/flink/plugins:ro
    depends_on:
      - flink-jobmanager
      - flink-taskmanager
      - flink-taskmanager-2
      - kafka
      - minio

  simulator:
    build: ./simulate
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    restart: always

  api:
    build: ./api
    ports:
      - "8000:8000"
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_BUCKET: metrics
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - minio
      - redis

volumes:
  minio_data:
